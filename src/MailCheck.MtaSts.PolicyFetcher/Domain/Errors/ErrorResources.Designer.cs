//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MailCheck.MtaSts.PolicyFetcher.Domain.Errors {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ErrorResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ErrorResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MailCheck.MtaSts.PolicyFetcher.Domain.Errors.ErrorResources", typeof(ErrorResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Our HTTP client timed out fetching the policy {0}, please ensure the policy file is obtainable through this URL..
        /// </summary>
        internal static string FetchTimeOutMarkdown {
            get {
                return ResourceManager.GetString("FetchTimeOutMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Line {0} found in policy, please ensure it adheres to the the format outlined in the following RFC: https://tools.ietf.org/html/rfc8461#section-3.2..
        /// </summary>
        internal static string KeyValueErrorMarkdown {
            get {
                return ResourceManager.GetString("KeyValueErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The max_age key must be a plaintext non-negative integer with a maximum value of 31557600..
        /// </summary>
        internal static string MaxAgeKeyErrorMarkdown {
            get {
                return ResourceManager.GetString("MaxAgeKeyErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} key should occur no more than {1}. This policy file has at least {2} occurrences..
        /// </summary>
        internal static string MaxOccurrencesExceededError {
            get {
                return ResourceManager.GetString("MaxOccurrencesExceededError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The mode key must be one of &quot;enforce&quot;, &quot;testing&quot;, or &quot;none&quot;..
        /// </summary>
        internal static string ModeKeyErrorMarkdown {
            get {
                return ResourceManager.GetString("ModeKeyErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Valid patterns can be either fully specified names (&quot;example.com&quot;) or suffixes prefixed by a wildcard (&quot;*.example.net&quot;). If a policy specifies more than one MX, each MX MUST have its own &quot;mx:&quot; key, and each MX key/value pair MUST be on its own line in the policy file..
        /// </summary>
        internal static string MxKeyErrorMarkdown {
            get {
                return ResourceManager.GetString("MxKeyErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Policy File is in an incorrect format..
        /// </summary>
        internal static string PolicyParseError {
            get {
                return ResourceManager.GetString("PolicyParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please ensure the MTA-STS policy file adheres to the format outlined in the following RFC: https://tools.ietf.org/html/rfc8461#section-3.2..
        /// </summary>
        internal static string PolicyParseErrorMarkdown {
            get {
                return ResourceManager.GetString("PolicyParseErrorMarkdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only STSv1 is supported for the version key..
        /// </summary>
        internal static string VersionKeyErrorMarkdown {
            get {
                return ResourceManager.GetString("VersionKeyErrorMarkdown", resourceCulture);
            }
        }
    }
}
